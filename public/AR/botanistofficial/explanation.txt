
## Development summary (portfolio-ready)

**Role & responsibilities**

* Lead front-end developer and technical owner for the BOTANIST official website. Responsibilities included: translating brand visual system into responsive code, implementing CMS templates, image & asset optimization, accessibility & SEO improvements, integration with analytics and e‑commerce partners, and setting up a deployable build/workflow for marketing releases.

**Experience highlights**

* **Design → Production**: Converted high-fidelity Figma/Sketch comps into pixel-accurate, responsive templates. Focused on retaining typographic rhythm and whitespace while ensuring images scale without layout shift.
* **CMS templating**: Built flexible templates (home, product index, special landing, journal listing, single article) that content editors can reuse without developer intervention. Employed custom fields to allow rich hero/media variations and modular sections.
* **Performance & image strategy**: Implemented responsive `srcset` images, WebP/AVIF fallbacks, and lazy-loading for offscreen media. Reduced CLS by reserving aspect-ratio boxes and prefetching hero imagery; improved LCP through optimized critical CSS and preconnect hints.
* **Progressive enhancement & accessibility**: ensured semantic HTML, ARIA where necessary, keyboard navigable menus, and high-contrast focus states. Conducted Lighthouse audits and manual keyboard/screen-reader checks.
* **Campaign support & release flow**: Delivered rapid-turn marketing landing pages and seasonal swaps with a componentized approach for repeatable sections (hero, CTA blocks, product rows).

**Observed / implemented tech stack**

* **CMS & backend**: WordPress (custom theme + advanced custom fields or similar) powering editorial content and special landing pages.
* **Templating / Server**: PHP-based templates (server-rendered), likely served on a standard LAMP/LEMP stack with static asset caching + CDN in front.
* **Frontend**: Modern HTML5, CSS3 (SCSS/Sass workflow), and modular JavaScript for interactive UI (lightweight, progressive — minimal blocking frameworks). Where necessary, small libraries/polyfills are used for cross-browser support (Polyfill.io observed in site fingerprinting).
* **Build tools & workflow**: npm-based toolchain (webpack/rollup or gulp) for bundling, SASS compilation, and asset hashing. Git for version control and CI triggers for staging/production deploys.
* **Performance & delivery**: CDN for static assets, image optimization pipeline (WebP/AVIF generation), server-side caching, and HTTP/2 (or HTTP/3) support.
* **Analytics & marketing integrations**: Google Analytics / Google Tag Manager, Google Ads; e‑commerce/affiliate integrations (links to Amazon, Rakuten, ZOZOTOWN), and social meta tags for rich sharing.
* **Third-party tools**: Contact forms and privacy pages connected to company endpoints; tracking pixels and A/B or campaign tools for marketing.

> Notes: a shallow site scan and public tech-index sources indicate WordPress + common marketing analytics are in use; precise hosting provider and private integrations (e.g., payment gateways used on partner stores) are not publicly visible and were not inferred.

**Quality & testing**

* Lighthouse audits (performance, accessibility, best practices) and browserstack-style cross-browser checks across mobile, tablet, and desktop.
* Image diffing during QA to ensure pixel integrity for hero and campaign assets.
* Manual verification of shopping links (official store, Rakuten, Amazon, Yahoo, ZOZOTOWN, Qoo10) and social share metadata.

**What I would showcase in the portfolio**

* Before/after performance metrics (LCP, FID, CLS) with short explanations of the optimizations applied.
* Component inventory: hero, product card, editorial card, CTA grid, footer, and utility classes.
* A short case-study section describing a campaign landing page build (requirements → implementation → results) to demonstrate speed and maintainability.

---

## Deliverables included in this doc

* 5 curated screenshot captions and placement guidance for portfolio use.
* A developer-facing tech-stack breakdown and development narrative ready to paste into a portfolio or case-study page.

---