Development Experience and Tech Stack

Project: Jalan.net â€” Travel & Hotel Booking Platform

Role: Full-Stack Developer

Technologies Used:

Frontend: HTML5, CSS3, JavaScript (React.js, Material UI)

Backend: Node.js, Express.js

Database: PostgreSQL

API: RESTful APIs, Third-party integrations (Google Maps API, hotel booking APIs)

DevOps/Hosting: AWS (EC2, S3), Docker, Nginx, CI/CD pipelines

Project Overview:
Jalan.net is a comprehensive travel and hotel booking platform designed to provide users with a seamless experience for discovering, booking, and managing hotel stays. The system allows users to search for accommodations by location, date, preferences, and budget. Payment processing and booking confirmations are handled securely through integrated third-party services.

My Role and Contributions:
As a full-stack developer, I was deeply involved in both frontend and backend development, contributing to the overall architecture and user experience. I worked alongside UI/UX designers to translate wireframes into a highly intuitive interface, and collaborated with backend engineers to integrate complex APIs for booking, availability retrieval, and secure payment processing.

Key contributions included:

Advanced Search & Filtering System: Developed an optimized search engine that delivers accurate results quickly, even with large datasets. Implemented dynamic filtering options so users could search by location, price range, amenities, and availability.

Responsive Design: Built a fully responsive UI with React.js and Material UI, ensuring consistent and smooth performance across mobile, tablet, and desktop devices.

User Authentication & Profiles: Implemented secure sign-up, login, and profile management systems to provide personalized experiences.

Seamless Booking Flow: Designed and implemented a multi-step booking process, integrating Stripe for secure payment handling.

Third-Party API Integrations: Integrated hotel booking APIs for real-time pricing and availability, as well as Google Maps for location-based search functionality.

Tech Stack in Detail:

Frontend: React.js powered the dynamic user interface, while Material UI ensured a consistent and intuitive design system.

Backend: Node.js with Express.js enabled fast and scalable backend services, while REST APIs facilitated seamless communication between frontend and backend.

Database: PostgreSQL was chosen for its reliability and performance, supporting thousands of concurrent transactions daily without degradation.

Payment Integration: Stripe was integrated to securely process payments, providing users a trustworthy checkout experience.

Deployment: The platform was deployed on AWS, utilizing EC2 for hosting, S3 for storage, and Docker for containerization, ensuring scalability and stability.

Challenges Overcome:

Ensuring the search system returned results instantly despite large datasets.

Implementing robust, secure authentication and payment processing workflows.

Designing an interface that works seamlessly across a wide range of devices without compromising performance or usability.

Summary:
This project sharpened my skills in building scalable web applications that balance high performance with user-centered design. It also reinforced my ability to work collaboratively with design and backend teams to deliver polished, reliable products.